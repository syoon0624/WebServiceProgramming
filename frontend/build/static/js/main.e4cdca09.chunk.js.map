{"version":3,"sources":["pages/HomePage.js","components/sidebarData.js","components/sidebar.js","pages/Blog.js","App.js","index.js"],"names":["MotherContainer","styled","div","Background","Title","a","IntroButton","button","bounce","keyframes","BorderAnimation","SLink","Link","HomePage","to","SidebarData","title","path","icon","boxFade","boxFadeIn","Navbar","NavActive","nav","NavMenu","NavMenuItems","ul","NavbarToggle","li","NavText","Span","span","Sidebar","useState","sidebar","setSidebar","showSidebar","Provider","value","color","onClick","map","item","index","Main","Container","BlogPage","GlobalStyle","createGlobalStyle","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAIMA,EAAkBC,IAAOC,IAAV,2EAKfC,EAAaF,IAAOC,IAAV,iPAWVE,EAAQH,IAAOI,EAAV,sFAMLC,EAAcL,IAAOM,OAAV,gNAYXC,EAASC,YAAH,6GASNC,EAAkBT,IAAOC,IAAV,8NAQJM,GAKXG,EAAQV,YAAOW,IAAPX,CAAH,+CAqBIY,EAjBE,WACf,OACE,cAACb,EAAD,UACE,cAACU,EAAD,UACE,eAACP,EAAD,WACE,cAACC,EAAD,UACE,+CAEF,cAACO,EAAD,CAAOG,GAAG,QAAV,SACE,cAACR,EAAD,iC,gCCvECS,EAAc,CACzB,CACEC,MAAO,SACPC,KAAM,UACNC,KAAM,cAAC,IAAD,KAER,CACEF,MAAO,OACPC,KAAM,IACNC,KAAM,cAAC,IAAD,KAER,CACEF,MAAO,QACPC,KAAM,SACNC,KAAM,cAAC,IAAD,KAER,CACEF,MAAO,aACPC,KAAM,WACNC,KAAM,cAAC,IAAD,M,OCZJC,EAAUV,YAAH,wFASPW,EAAYX,YAAH,yFASTY,EAASpB,IAAOC,IAAV,8NAaNoB,EAAYrB,IAAOsB,IAAV,mJAOAH,GAGTI,EAAUvB,IAAOsB,IAAV,mLAOEJ,GAITM,EAAexB,IAAOyB,GAAV,0EAKZC,EAAe1B,IAAO2B,GAAV,4LAUZC,EAAU5B,IAAO2B,GAAV,yZAsBPE,EAAO7B,IAAO8B,KAAV,kDAIJpB,EAAQV,YAAOW,IAAPX,CAAH,2FAmEI+B,I,QAAAA,GA7Df,WAAoB,IAAD,EACaC,oBAAS,GADtB,mBACVC,EADU,KACDC,EADC,KAEXC,EAAc,kBAAMD,GAAYD,IACtC,OACE,mCAEE,eAAC,IAAYG,SAAb,CAAsBC,MAAO,CAAEC,MAAO,QAAtC,UAEE,eAAClB,EAAD,WACE,cAAC,EAAD,CAAOP,GAAG,IAAV,SACE,cAAC,IAAD,CAAgB0B,QAASJ,MAE3B,gDAEDF,EACC,cAACV,EAAD,CAASU,QAASA,EAAlB,SACE,eAACT,EAAD,CAAce,QAASJ,EAAvB,UACE,cAACT,EAAD,UACE,cAAC,EAAD,CAAOb,GAAG,IAAV,SACE,cAAC,IAAD,QAIHC,EAAY0B,KAAI,SAACC,EAAMC,GACtB,OACE,cAACd,EAAD,UACE,eAAC,IAAD,CAAMf,GAAI4B,EAAKzB,KAAf,UACGyB,EAAKxB,KACN,cAACY,EAAD,UAAOY,EAAK1B,YAHF2B,WAWtB,cAACrB,EAAD,CAAWY,QAASA,EAApB,SACE,eAACT,EAAD,CAAce,QAASJ,EAAvB,UACE,cAACT,EAAD,UACE,cAAC,EAAD,CAAOb,GAAG,IAAV,SACE,cAAC,IAAD,QAIHC,EAAY0B,KAAI,SAACC,EAAMC,GACtB,OACE,cAACd,EAAD,UACE,eAAC,IAAD,CAAMf,GAAI4B,EAAKzB,KAAf,UACGyB,EAAKxB,KACN,cAACY,EAAD,UAAOY,EAAK1B,YAHF2B,iBCtJ1BC,GAAO3C,IAAOC,IAAV,kGAMJ2C,GAAY5C,IAAOC,IAAV,6GAeA4C,GATE,WACf,OACE,eAACD,GAAD,WACE,cAAC,GAAD,IACA,cAACD,GAAD,qCCdAG,GAAcC,YAAH,4MA0BFC,GAVH,kBACV,eAAC,IAAD,WACE,cAACF,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9B,KAAK,IAAIiC,OAAK,EAACC,UAAWtC,IACjC,cAAC,IAAD,CAAOI,KAAK,QAAQiC,OAAK,EAACC,UAAWL,YCvB3CM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4cdca09.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MotherContainer = styled.div`\n  background-color: #bac8ff;\n  height: 100%;\n`;\n\nconst Background = styled.div`\n  padding: 50px;\n  background-image: url('img/background.png');\n  background-repeat: no-repeat;\n  height: 350px;\n  width: 640px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst Title = styled.a`\n  margin: 0 auto;\n  color: #ffe3e3;\n  font-size: 40px;\n`;\n\nconst IntroButton = styled.button`\n  line-height: 30px;\n  border: none;\n  width: 300px;\n  background-color: #63e6be;\n  border-radius: 8px;\n  :hover {\n    cursor: pointer;\n    background-color: #20c997;\n  }\n`;\n\nconst bounce = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(1.3)\n  }\n`;\n\nconst BorderAnimation = styled.div`\n  position: absolute;\n  border: 10px solid black;\n  top: 50%;\n  left: 50%;\n  margin-top: -175px;\n  margin-left: -322px;\n  :hover {\n    animation: ${bounce} 1s;\n    transform: scale(1.3);\n  }\n`;\n\nconst SLink = styled(Link)`\n  margin: 0 auto;\n`;\n\nconst HomePage = () => {\n  return (\n    <MotherContainer>\n      <BorderAnimation>\n        <Background>\n          <Title>\n            <h1>Yoon's Page</h1>\n          </Title>\n          <SLink to=\"/blog\">\n            <IntroButton>Go Blog!</IntroButton>\n          </SLink>\n        </Background>\n      </BorderAnimation>\n    </MotherContainer>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport * as BsIcons from 'react-icons/bs';\nexport const SidebarData = [\n  {\n    title: 'MyPage',\n    path: '/mypage',\n    icon: <BsIcons.BsPersonBoundingBox />,\n  },\n  {\n    title: 'Home',\n    path: '/',\n    icon: <BsIcons.BsFillHouseDoorFill />,\n  },\n  {\n    title: 'About',\n    path: '/about',\n    icon: <BsIcons.BsFillInfoCircleFill />,\n  },\n  {\n    title: 'Contact Us',\n    path: '/contact',\n    icon: <BsIcons.BsEnvelopeFill />,\n  },\n];\n","import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SidebarData } from './sidebarData';\nimport styled, { keyframes } from 'styled-components';\n/* 아이콘 컬러 전체 변경 기능 */\nimport { IconContext } from 'react-icons';\n\nconst boxFade = keyframes`\n  0% {\n    left: 0;\n  }\n  100% {\n    left: -100%;\n  }\n`;\n\nconst boxFadeIn = keyframes`\n  0% {\n    left: -100%;\n  }\n  100% {\n    left: 0%;\n  }\n`;\n\nconst Navbar = styled.div`\n  background-color: #060b26;\n  height: 80px;\n  display: flex;\n  justify-items: center;\n  align-items: center;\n  h1 {\n    padding-left: 20px;\n    font-size: 40px;\n    color: white;\n  }\n`;\n\nconst NavActive = styled.nav`\n  left: 0;\n  width: 250px;\n  height: 110vh;\n  display: flex;\n  position: fixed;\n  top: 0;\n  animation: ${boxFadeIn} 0.5s;\n`;\n\nconst NavMenu = styled.nav`\n  background-color: #060b26;\n  width: 250px;\n  height: 110vh;\n  display: flex;\n  position: fixed;\n  top: 0;\n  animation: ${boxFade} 1s;\n  left: -100%;\n`;\n\nconst NavMenuItems = styled.ul`\n  background-color: #060b26;\n  width: 100%;\n`;\n\nconst NavbarToggle = styled.li`\n  background-color: #060b26;\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-left: -25px;\n`;\n\nconst NavText = styled.li`\n  a {\n    text-decoration: none;\n    color: #f5f5f5;\n    font-size: 18px;\n    width: 95%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    border-radius: 4px;\n  }\n  :hover {\n    background-color: #1a83ff;\n  }\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 8px 0px 8px 16px;\n  list-style: none;\n  height: 60px;\n`;\n\nconst Span = styled.span`\n  margin-left: 16px;\n`;\n\nconst SLink = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  background: none;\n`;\n\nfunction Sidebar() {\n  const [sidebar, setSidebar] = useState(true);\n  const showSidebar = () => setSidebar(!sidebar);\n  return (\n    <>\n      {/* 아이콘 컬러 전체 변경 기능 */}\n      <IconContext.Provider value={{ color: '#fff' }}>\n        {/* 네비게이션 토글 코드*/}\n        <Navbar>\n          <SLink to=\"#\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </SLink>\n          <h1>Yoon's Blog</h1>\n        </Navbar>\n        {sidebar ? (\n          <NavMenu sidebar={sidebar}>\n            <NavMenuItems onClick={showSidebar}>\n              <NavbarToggle>\n                <SLink to=\"#\">\n                  <AiIcons.AiOutlineClose />\n                </SLink>\n              </NavbarToggle>\n              {/* SidebarData를 순서대로 담기*/}\n              {SidebarData.map((item, index) => {\n                return (\n                  <NavText key={index}>\n                    <Link to={item.path}>\n                      {item.icon}\n                      <Span>{item.title}</Span>\n                    </Link>\n                  </NavText>\n                );\n              })}\n            </NavMenuItems>\n          </NavMenu>\n        ) : (\n          <NavActive sidebar={sidebar}>\n            <NavMenuItems onClick={showSidebar}>\n              <NavbarToggle>\n                <SLink to=\"#\">\n                  <AiIcons.AiOutlineClose />\n                </SLink>\n              </NavbarToggle>\n              {/* SidebarData를 순서대로 담기*/}\n              {SidebarData.map((item, index) => {\n                return (\n                  <NavText key={index}>\n                    <Link to={item.path}>\n                      {item.icon}\n                      <Span>{item.title}</Span>\n                    </Link>\n                  </NavText>\n                );\n              })}\n            </NavMenuItems>\n          </NavActive>\n        )}\n      </IconContext.Provider>\n    </>\n  );\n}\nexport default Sidebar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Sidebar from '../components/sidebar';\n\nconst Main = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst BlogPage = () => {\n  return (\n    <Container>\n      <Sidebar />\n      <Main>This is Blog Page.</Main>\n    </Container>\n  );\n};\n\nexport default BlogPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport HomePage from './pages/HomePage';\nimport BlogPage from './pages/Blog';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body,\n  #root {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n  html {\n    box-sizing: border-box;\n    * {\n      box-sizing: inherit;\n    }\n  }\n`;\n\nconst App = () => (\n  <BrowserRouter>\n    <GlobalStyle />\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/blog\" exact component={BlogPage} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}