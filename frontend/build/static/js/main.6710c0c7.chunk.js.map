{"version":3,"sources":["TextItem.js","App.js","reportWebVitals.js","index.js"],"names":["TextItem","text","id","handleClick","onClick","axios","defaults","xsrfCookieName","xsrfHeaderName","App","state","value","textList","_handleChange","event","setState","target","_handleSubmit","post","then","res","_renderText","get","data","catch","err","console","log","_deleteText","delete","this","className","type","onChange","map","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAWeA,EATE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAC5B,OACE,gCACE,4BAAIF,IACJ,wBAAQG,QAAS,kBAAMD,EAAYD,IAAnC,8B,sBCDNG,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IA4DjBC,E,4MAzDbC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAqCZC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,OAAOL,S,EAEtCM,cAAgB,WAAO,IACbN,EAAU,EAAKD,MAAfC,MACRN,IAAMa,KAAK,aAAc,CAAEjB,KAAMU,IAASQ,MAAK,SAAAC,GAAG,OAAI,EAAKC,kB,EAE7DA,YAAc,WACZhB,IACGiB,IAAI,cACJH,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEH,SAAUQ,EAAIG,UAC1CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAE9BG,YAAc,SAAA1B,GACZG,IAAMwB,OAAN,oBAA0B3B,IAAMiB,MAAK,SAAAC,GAAG,OAAI,EAAKC,kB,uDAhDnD,WACES,KAAKT,gB,oBAEP,WAAU,IAAD,OACCT,EAAakB,KAAKpB,MAAlBE,SAER,OADAc,QAAQC,IAAIf,GAEV,sBAAKmB,UAAU,MAAf,UACE,6CACA,gCACE,0CAEE,uBACEC,KAAK,OACLrB,MAAOmB,KAAKpB,MAAMC,MAClBsB,SAAUH,KAAKjB,mBAGnB,wBAAQT,QAAS0B,KAAKb,cAAtB,uBAEF,2CACCL,EAASsB,KAAI,SAACjC,EAAMkC,GACnB,OACE,cAAC,EAAD,CACElC,KAAMA,EAAKA,KAEXC,GAAID,EAAKC,GACTC,YAAa,EAAKyB,aAFbO,a,GA/BDC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6710c0c7.chunk.js","sourcesContent":["import React from 'react';\n\nconst TextItem = ({ text, id, handleClick }) => {\n  return (\n    <div>\n      <p>{text}</p>\n      <button onClick={() => handleClick(id)}>삭제</button>\n    </div>\n  );\n};\n\nexport default TextItem;\n","import React, { Component } from 'react';\nimport TextItem from './TextItem';\nimport axios from 'axios';\nimport './App.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass App extends Component {\n  state = {\n    value: '',\n    textList: [],\n  };\n\n  componentDidMount() {\n    this._renderText();\n  }\n  render() {\n    const { textList } = this.state;\n    console.log(textList);\n    return (\n      <div className=\"App\">\n        <h1>OneLine App</h1>\n        <div>\n          <label>\n            Text:\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this._handleChange}\n            />\n          </label>\n          <button onClick={this._handleSubmit}>submit</button>\n        </div>\n        <h2>Long Text</h2>\n        {textList.map((text, index) => {\n          return (\n            <TextItem\n              text={text.text}\n              key={index}\n              id={text.id}\n              handleClick={this._deleteText}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n  _handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  _handleSubmit = () => {\n    const { value } = this.state;\n    axios.post('/api/post/', { text: value }).then(res => this._renderText());\n  };\n  _renderText = () => {\n    axios\n      .get('/api/post/')\n      .then(res => this.setState({ textList: res.data }))\n      .catch(err => console.log(err));\n  };\n  _deleteText = id => {\n    axios.delete(`/api/post/${id}`).then(res => this._renderText());\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}